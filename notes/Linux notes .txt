/c/devops/daws-84s/daws-84s --> full path

git add . && git commit -m "update" && git push -u origin main
clear
exit

$ --> normal user
# --> root/admin/super user
/root --> root user home directory

command <options> <inputs>

/ --> root directory

ls -l --> long listing format in alphabetical order
ls -lr --> long listing format in reverse alphabetical order
ls -lt --> latest files on top
ls -ltr --> latest at bottom
ls -la --> all files including hidden files and folders
head filename
head -nx filename --->x is number of line 1st lines
tail -nx filename --> x is number of line last lines

touch <file-name> --> creates empty file

cat > <file-name> --> type text, enter and ctrl+d get out from
previous content will be replaced
cat >> <file-name> --> appends text to previous content ctrl+d get out from


> --> usually called as redirection

mkdir <name> --> creates directory
rmdir --> remove empty directory
rm -f --> forcefully removes file
rm -rf --> recursively forcefully delete the files and folders inside too

CRUD --> create read update delete

cp <source> <destination> --> copy files/folders
mv <source> <destination> --> cut and paste

wget <URL> --> downloads the file
curl <URL> --> shows on the screen

cat <file-name> | grep <word-to-search>
grep <word-to-search> <file>

https://raw.githubusercontent.com/daws-84s/notes/refs/heads/main/session-02.txt

echo https://raw.githubusercontent.com/daws-84s/notes/refs/heads/main/session-02.txt | cut -d "/" -f1

awk command
------------
echo https://raw.githubusercontent.com/daws-84s/notes/refs/heads/main/session-02.txt | awk -F "/" '{print $1F}'

log files --> tail -f <log-file>----> falling logs

find <where to search> -name <file-name> -->example find / -name newf --finds the folder from all dir 
sudo find / -name "*ne"
sudo find / -name "*i.txt"
-------------------------------------
vim editor
vim <file-name>

3 MODEs
Esc, Colon, insert MODEs

command MODE
==============
:q -> quit the file
:wq --> write and quit
:wq! --> force write and quit
:q! --> exit without saving
:/<word-search> --> search for the word from top---n to go to next
:?<word-search> --> search for the word from bottom
:noh --> no highlight the search word
:set nu  shows the line num
:set nonu     
:27 d --> delete 27th line
:%d --> total content will be deleted

:3s/sbin/SBIN --> in 3rd line first occurence of sbin will be replaced with SBIN
:3s/sbin/SBIN/g --> all occurence in that line
:%s/sbin/SBIN/g --> all occurences in the file

Esc Mode
===============
u --> undo
yy --> copy the line where you are
p --> paste
dd --> cut the line
gg --> takes to top of the file
shift+g --> takes us to bottom of the file

Linux Administration
=====================
User management
CRUD
useradd <user-name> --> create user we need admin so sudo su do 1st
id <user-name> --> displays the user infoid vijayl
output
uid=1003(vijayl) gid=1003(vijayl) groups=1003(vijayl)


cat /etc/group--- shows the groups
output
vijayl:x:1003:

cat /etc/passwd --- shows the users
output
vijayl:x:1003:1003::/home/vijayl:/bin/bash



group --> list of similar users
devops team have 20 members
create devops group, add team members to the group

in linux when you create user, by default group also will be created with same name..
primary group and secondary group

1 primary group, atleast one secondary group

groupadd devops --> devops group will be created

usermod -g devops vijayl
id vijayl
output: uid=1003(vijayl) gid=1004(devops) groups=1004(devops)

groupadd tester 
usermod -aG tester vijayl--->aG append G-secondary group g-primary group
o/p:
uid=1003(vijayl) gid=1004(devops) groups=1004(devops),1005(test)

passwd <user-name>
userdel vijayl --> deletes user not group
groupdel vijayl --> deletes group 
and delete directories

set passwrd
------
sudo passwd vijayl--->ask to set passwrd

we can login with this: check this vim /etc/ssh/sshd_config---
--# To disable tunneled clear text passwords, change to no here!
---#PasswordAuthentication yes
connect: from bash
ssh vijayl@54.147.183.166
pwd--->/home/vijayl
usermod -a vijayl ec2-user

permissions
==============
R -> 4
W -> 2
X -> 1
-			rw-		r--		r--
file/		user/   group	others
			owner
directory     u       g       o

ec2-user     ec2-user
user		group

chmod ugo+w devops.txt
chmod 700 devops.txt

chmod 777 tt.txt
-rwxrwxrwx 1 ec2-user ec2-user  0 May 24 14:53 tt.txt


only owner/root user can change the permissions

sudo chown <user>:<group> devops.txt

file ownership can only be modified by root user
/etc/ssh/sshd_config

how can you give key based access to linux user?
cd /temp/

ssh-keygen -f sivakumar
--------------------------
65,536 ports 0-65,535
key base access:
1. create user
2. sivakumar can send his public key to admin user
3. /home/sivakumar admin creates .ssh in /home/sivakumar folder
4. sivakumar is the only owner to this folder... 700
5. create a file called authorized_keys with max access 600
6. admin keeps sivakumar public key here.
7. now sivakumar should be able to login
port is like flat number

generate key
ssh-keygen -f vijayk
from sudo su:
useradd vijayk
cd ../vijayk/
pwd
mkdir .ssh
chmod 700 -R .ssh/
ls -l
cd .ssh/
touch autherized_keys
chmod 600 autherized_keys
cd ..
chown vijayk:vijayk -R .ssh/
cd .ssh/

vim autherized_keys add pub key(got from
connect from ssh -i vijayk vijayk@35.175.177.152

cd /ssh
ssh -i <key> ec2-user@IP
 
---------------------------------------

root acce to vijayk(User) go to
vim /etc/sudoers --> you can do changes to provide root access
or add user to wheel group without password

## Same thing without a password
# %wheel        ALL=(ALL)       NOPASSWD: ALL -->remove #
or 

# vijayk      ALL=(ALL)       NOPASSWD: ALL -->remove #

usermod -aG wheel vijayk



package management
====================
package manager connects to internet windows website. downloads them and install them

apt-get
yum/dnf

dnf install <package-name>

dnf list installed
dnf list available

/etc/yum.repos.d

service management
===================
systemctl start <service-name>
systemctl stop <service-name>
systemctl status <service-name>
systemctl restart <service-name>
systemctl enable <service-name>
systemctl disable <service-name>

install nginx and start it

protocol, port, ip, username and password

http		80  <IP>
